(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{974:function(t,s,e){"use strict";e.r(s);var n=e(6),i=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("在"),e("code",[t._v("第4.9小节")]),t._v("，我们已经知道，切片实际是一个指向潜在数组的指针。我们常常需要把切片作为一个参数传递给函数是因为：实际就是传递一个指向变量的指针，在函数内可以改变这个变量，而不是传递数据的拷贝。")]),t._v(" "),e("p",[t._v("因此应该这样做：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("   func findBiggest( listOfNumbers []int ) int {}\n")])])]),e("p",[t._v("而不是：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("   func findBiggest( listOfNumbers *[]int ) int {}\n")])])]),e("p",[e("strong",[t._v("当切片作为参数传递时，切记不要解引用切片。")])])])}),[],!1,null,null,null);s.default=i.exports}}]);