(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{840:function(v,_,t){"use strict";t.r(_);var e=t(6),n=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("应用程序的开发过程中调试是必不可少的一个环节，因此有一个好的调试器是非常重要的，可惜的是，Go 在这方面的发展还不是很完善。目前可用的调试器是 gdb，最新版均以内置在集成开发环境 LiteIDE 和 GoClipse 中，但是该调试器的调试方式并不灵活且操作难度较大。")]),v._v(" "),t("p",[v._v("如果你不想使用调试器，你可以按照下面的一些有用的方法来达到基本调试的目的：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("在合适的位置使用打印语句输出相关变量的值（"),t("code",[v._v("print")]),v._v("/"),t("code",[v._v("println")]),v._v(" 和 "),t("code",[v._v("fmt.Print")]),v._v("/"),t("code",[v._v("fmt.Println")]),v._v("/"),t("code",[v._v("fmt.Printf")]),v._v("）。")])]),v._v(" "),t("li",[t("p",[v._v("在 "),t("code",[v._v("fmt.Printf")]),v._v(" 中使用下面的说明符来打印有关变量的相关信息：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("%+v")]),v._v(" 打印包括字段在内的实例的完整信息")]),v._v(" "),t("li",[t("code",[v._v("%#v")]),v._v(" 打印包括字段和限定类型名称在内的实例的完整信息")]),v._v(" "),t("li",[t("code",[v._v("%T")]),v._v(" 打印某个类型的完整说明")])])]),v._v(" "),t("li",[t("p",[v._v("使用 panic 语句（第 13.2 节）来获取栈跟踪信息（直到 panic 时所有被调用函数的列表）。")])]),v._v(" "),t("li",[t("p",[v._v("使用关键字 defer 来跟踪代码执行过程（第 6.4 节）。")])])])])}),[],!1,null,null,null);_.default=n.exports}}]);